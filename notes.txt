-Login
-Register

User and Admin
-Login
-Logout
-View all Products
-View single product by id

User only
-Add to Cart
-View Cart
-Checkout

Admin only
-Create an item
-Update an item
-Delete an item

50%
Login, Logout, View all, View single item, add to cart, View cart, create an item

75%
Login, Logout, View all, View single item, add to cart, view cart, checkout, create, update, delete an item

90%
Login, Logout, View all, View single item, add to cart, view cart, checkout, create, update, delete an item +

(FrontEnd-Backend) 
- You need to implement deleting a specific item on cart
- Empty cart
+
Front-end and backend should be hosted


import React, { useState } from "react"
import {Card, Button} from "react-bootstrap"
import { SERVER_URL } from "../config.json"
import Swal from "sweetalert2"
import EditItem from "./forms/EditItem"

const Item = ({data}) => {
	// const {price,description,name,category} = data
	const userData = JSON.parse(localStorage.getItem('userData'))
	// console.log(userData)
	const token = localStorage.getItem("token")
	const [editing, setEditing] = useState(false)

	const deleteHandler = (e) => {
		Swal.fire({
		  title: 'Are you sure?',
		  text: "You won't be able to revert this!",
		  icon: 'warning',
		  showCancelButton: true,
		  confirmButtonColor: '#3085d6',
		  cancelButtonColor: '#d33',
		  confirmButtonText: 'Yes, delete it!'
		}).then((result) => {
		  if (result.isConfirmed) {
			fetch(`${SERVER_URL}items/${data._id}`, {
				method: "DELETE",
				headers: {
					"x-auth-token": token
				}
			})
			.then(res => res.json())
			.then(data => {
				Swal.fire(
					'Deleted',
					data.msg,
					'success'
				)
			})
		  }
		})
	}
	console.log(data)

	return(
		<Card className="m-4">
			{
				editing ? <EditItem data={data}/> :
				<Card.Body>
					<Card.Title>{data.title}</Card.Title>
					<Card.Text>{data.body}</Card.Text>
				</Card.Body>
			}
			{
				!editing&& <>
					<div>{name}</div>
					<p>{description}{category}</p>
					<span>{price}</span>

				</>
			}
			{
				userData !== null && userData.user.id === data.author ? 
				<React.Fragment>
					<Button variant="warning" onClick={() => setEditing(!editing)}>
						{editing ? "Cancel" : "Edit"}
					</Button>
					<Button variant="danger" onClick={deleteHandler}>Delete</Button>
				</React.Fragment> : null
			}
		</Card>
	)
}

export default Item